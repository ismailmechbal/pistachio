<h1 class="cd-text cd-title">navigation</h1>
<p class="cd-text">These are our core navigation components that should be use to direct a user around a website or collection of subpages. When multiple rows of navigation elements are adjacent to each other, use <a href="page-sections">page sections</a> to visually distinguish them from each other.</p>

<h2 class="cd-text cd-title">default nav</h2>
<p class="cd-text">Our default in-page nav is a horizontal nav with pill styling. The <code>.nav__item--active</code> class can optionally be used to highlight the current context. By default our navs are <code>inline-block</code> but can be made <code>block</code> by using the <code>nav--block</code> modifier.</p>

{{{ getFile 'site/docs/views/examples/nav/sub-nav.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/sub-nav.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">nav with heading</h2>
<p class="cd-text">Use the <code>.nav-heading</code> element to align a non-navigational element with the rest of the <code>.nav__item</code>s.</p>

{{{ getFile 'site/docs/views/examples/nav/sub-nav-heading.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/sub-nav-heading.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">nav with buttons</h2>
<p class="cd-text">Buttons will also align with nav elements.</p>

{{{ getFile 'site/docs/views/examples/nav/sub-nav-buttons.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/sub-nav-buttons.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">side navigation</h2>
<p class="cd-text">Our side navigation is a varation of the nav where <code>.nav__item</code>s are aligned vertically using the <code>.nav--vertical</code> modifier. Some mobile appropriate CSS is applied below 768px viewport width.</p>

{{{ getFile 'site/docs/views/examples/side-nav.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/side-nav.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">tabbed nav</h2>
<p class="cd-text">Use the <code>.nav--tabs</code> modifier to generate a nav that uses tabs and should always be used over a full viewport width <a href="page-section">page-section</a> with the same classes as in the example below.</p>
{{{ getFile 'site/docs/views/examples/nav/nav-tabs.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabs.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">small tabbed nav</h2>
<p class="cd-text">Use the <code>.nav--tabs--sm</code> modifier to generate a tabbed nav with less padding.</p>
{{{ getFile 'site/docs/views/examples/nav/nav-tabs-sm.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabs-sm.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">inverse tabbed nav</h2>
<p class="cd-text">Use the <code>.nav--tabs--inverse</code> modifier to generate a tabbed nav that works on dark backgrounds. This should typically only be used on a <a href="page-sections">brand colour page section</a> at the very top of a page as part of top level navigation as in <a href="/layouts/off-screen-menu">this layout example</a>.</p>
{{{ getFile 'site/docs/views/examples/nav/nav-tabs-inverse.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabs-inverse.html' }}}
{{/codeBlock}}

<h2 class="cd-text cd-title">Dropdown menus</h2>
<p class="cd-text">Dropdown menus require pistachio.js support and the presence of the <code>data-p-module="dropDown"</code> attribute along with the classes and markup order as shown here.

In addition to the basic show/hide functionality, the Dropdown JavaScript also applies the following:</p>

<ul class="cd-text">
    <li><code>aria</code> attributes to improve accessiblity</li>
    <li>Keyboard controls - when focused a dropdown element will activate on <code>enter</code> key press</li>
    <li>The ability to specify breakpoints at which the tabs will switch to the offscreen menu functionality via the <code>data-dropdown-offscreen="xxs,xs"</code> attribute.</li>
</ul>

<p class="cd-text">If JavaScript is unavailable for some reason, the dropdown will still work with css only as far as the browser support allows.</p>

<p class="cd-text">A navigation item or a button can be a dropdown list. This should never replace a <code>select</code> element in a form, but is suitable for small collections of links in a navigation element.

<h3 class="cd-text cd-title">left alignment</h3>
{{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd-list-left.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd-list-left.html' }}}
{{/codeBlock}}

<h3 class="cd-text cd-title">right alignment</h3>
{{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd-list-right.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd-list-right.html' }}}
{{/codeBlock}}

<h3 class="cd-text cd-title">as a button</h3>
{{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd-list-button.html' }}}
{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd-list-button.html' }}}
{{/codeBlock}}

<h3 class="cd-text cd-title">full width</h3>
<p class="cd-text">For dropdown menus with a lot of content, you can use the full width of the page with some optional layout classes. Check the <a href="/layouts/full-width-drop-down-menu">dropdown menu example page</a> for a markup example.</p>

<div class="page-section page-section--alternate page-section--bleed">
{{{ getFile 'site/docs/views/examples/nav/nav-tabs-dd.html' }}}
</div>

<p class="cd-text">A navigation item or a button can be a dropdown list. This should never replace a <code>select</code> element in a form, but is suitable for small collections of links in a navigation element.

<h2 class="cd-text cd-title">tabbed nav with content</h2>
<p class="cd-text">Tabbed content requires pistachio.js support and the presence of the <code>data-p-module="tabs"</code> attribute along with the classes and markup order as shown on the <a href="/layouts/tabbed-content">tabbed-content layout</a> page.

In addition to the basic show/hide functionality, the tabbed content JavaScript also applies the following:</p>

<ul class="cd-text">
    <li>HTML5 and <code>aria</code> attributes to improve accessiblity</li>
    <li>Keyboard controls - when focused a tab will activate it's section on <code>enter</code> key press</li>
    <li>The ability to specify breakpoints at which the tabs will switch to an accordion via the <code>data-tabs-stacked="xxs,xs"</code> attribute.</li>
</ul>

<p class="cd-text">If JavaScript is unavailable for some reason, the tabs will still work with css only but will not switch to accordions at the specified breakpoints.</p>

<div class="page-section page-section--hint">
    {{{ getFile 'site/docs/views/examples/nav/nav-tabbed-content-in-page.html' }}}
</div>

{{#codeBlock}}
    {{{ getFile 'site/docs/views/examples/nav/nav-tabbed-content-in-page.html' }}}
{{/codeBlock}}
